#!/usr/bin/env ruby
# frozen_string_literal: true

# Create a Google Sheets spreadsheet in Google Drive
#
# When creating a spreadsheet, you create a file with a MIME type of
# 'application/vnd.google-apps.spreadsheet' and a name. You can also specify the
# spreadsheet's parent folder and other metadata.
#
# The file_create method allows loading an Excel spreadheet or a sheet of data
# from CSV or TSV data. Specify the data to load using `upload_source` and
# `content_type` parameters. If `upload_source` is not specified, the file will
# be created as an empty spreadsheet.

require 'drive_v3'
require 'json'

drive_service = DriveV3.drive_service

# If name is not specified as part of a create request, the file name is named
# 'Untitled'.
name = 'My spreadsheet file'

# If parents not specified as part of a create request or is an empty array, the
# file is placed directly in the user's My Drive folder
#
# parents = ['id1', 'id2']
parents = []

# The MIME type of the file. Drive will attempt to automatically detect an
# appropriate value from uploaded content if no value is provided. The value
# cannot be changed unless a new revision is uploaded.
#
# The default MIME type is 'text/plain'
#
# mime_type = nil
mime_type = 'application/vnd.google-apps.spreadsheet'

file_metadata = { name:, parents:, mime_type: }

# If fields is not specified, the following default fields are returned:
# id, name, kind, and mime_type. '*' can by used to return all fields.
# See https://developers.google.com/drive/api/v3/reference/files#resource
#
fields = '*'

# When creating the data file, upload_source should be an IO object that
# responds to `read` and `size` (e.g. StringIO) or a string that names
# an existing file to upload.
#
# If upload_source is not specified, the file will be created as an empty
# data file.
#
upload_source = StringIO.new("1,2,3\n4,5,6\n7,8,9")

# Content type indicates the MIME type of `upload_source`. If not specified,
# the content type will be determined by calling MIME::Types.of with the
# upload_source's filename.
#
# content_type = 'text/plain'
# CSV content type
# content_type = nil
content_type = 'text/csv'

begin
  file = drive_service.create_file(file_metadata, fields:, upload_source:, content_type:)
  puts JSON.pretty_generate(file.to_h)
rescue StandardError => e
  puts "An error occurred: #{e.message}"
end
