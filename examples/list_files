#!/usr/bin/env ruby
# frozen_string_literal: true

# `list_files` returns a [FileList](https://github.com/googleapis/google-api-ruby-client/blob/main/generated/google-apis-drive_v3/lib/google/apis/drive_v3/classes.rb)
# object. The FileList object has a `files` property that is an array of files returned.
#
# This example illustrates how to:
#   1. specify a search query (to omit deleted files),
#   2. specify which fields to return for each file,
#   3. retrieve the name and link to the parent folder for each file, and
#   4. retrieve pagenated results.

require 'drive_v3'

@drive_service = DriveV3.drive_service

@parents = {}

def parent(id)
  @parents[id] ||= @drive_service.get_file(id, fields: 'name, web_view_link')
end

files = []

# Number of files to return with each request
#
# Limiting to 5 for this example, normally this would be a lot higher
# (default is 100)
#
page_size = 5

# Signal to get first page of results
#
# nextPageToken property returns the page_token of the next page
# of results. If nextPageToken is empty, there are no more pages.
#
page_token = nil

# By default `list_files` returns all files even files in the trash. To omit trashed
# files add `trashed=false` to the q (query) parameter.
#
# See [Search for files & folders](https://developers.google.com/drive/api/v3/search-files)
# for more information about how to use the `q` parameter.
#
q = 'trashed=false'

# If `fields` is not specified, the following fields are returned for each file:
# id, name, mimeType, and kind.
#
# Could return all possible fields by specifying `fields: '*'`. In this example,
# we only need `nextPageToken` for the request and `id`, `name`, and `parents`,
# and `web_view_link` for each file.
#
# If you give fields, you must explicitly include `nextPageToken` if you want it.
#
# See [Return specific fields for a file](https://developers.google.com/drive/api/guides/fields-parameter)
# for more information about how to retrieve other fields.
#
fields = 'nextPageToken, files(id, name, parents, web_view_link)'

loop do
  file_list = @drive_service.list_files(q:, fields:, page_token:, page_size:)
  files += file_list.files
  # Stop looping if there are no more pages
  break unless (page_token = file_list.next_page_token)
end

# Print as markdown with links to each file and its parents
#
# files.each do |file|
#   print "[#{file.name}](#{file.web_view_link})"
#   if file.parents
#     parents = file.parents.map { |id| parent(id) }
#     print ' (parents: '
#     print parents.map { |p| "[#{p.name}](#{p.web_view_link})" }.join(', ')
#     print ')'
#   end
#   puts
# end

files.each do |file|
  print file.name
  if file.parents
    parents = file.parents.map { |id| parent(id) }
    print ' (parents: '
    print parents.map(&:name).join(', ')
    print ')'
  end
  puts
end
